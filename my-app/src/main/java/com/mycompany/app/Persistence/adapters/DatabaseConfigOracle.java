package com.mycompany.app.Persistence.adapters;

import java.sql.Connection;
import java.sql.Statement;

public class DatabaseConfigOracle {
  public static void init(Connection connection) {
    try (Statement stmt = connection.createStatement()) {

      // Tabla Persona
      stmt.execute(
          "CREATE TABLE personas (" +
              "id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY," +
              "nombres VARCHAR2(255)," +
              "apellidos VARCHAR2(255)," +
              "email VARCHAR2(255) UNIQUE" +
              ")");

      // Tabla Facultad
      stmt.execute(
          "CREATE TABLE facultades (" +
              "id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY," +
              "nombre VARCHAR2(255)," +
              "decano_id NUMBER," +
              "telefono VARCHAR2(255)," +
              "email VARCHAR2(255)," +
              "FOREIGN KEY (decano_id) REFERENCES personas(id)" +
              ")");

      // Tabla Programa
      stmt.execute(
          "CREATE TABLE programas (" +
              "id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY," +
              "nombre VARCHAR2(255)," +
              "duracion NUMBER," +
              "registro DATE," +
              "facultad_id NUMBER," +
              "FOREIGN KEY (facultad_id) REFERENCES facultades(id)" +
              ")");

      // Tabla Profesor
      stmt.execute(
          "CREATE TABLE profesores (" +
              "id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY," +
              "persona_id NUMBER," +
              "nivel VARCHAR2(255)," +
              "contrato VARCHAR2(255)," +
              "activo CHAR(1) CHECK (activo IN ('Y','N'))," +
              "FOREIGN KEY (persona_id) REFERENCES personas(id)" +
              ")");

      // Tabla Estudiante
      stmt.execute(
          "CREATE TABLE estudiantes (" +
              "id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY," +
              "persona_id NUMBER," +
              "codigo NUMBER," +
              "programa_id NUMBER," +
              "activo CHAR(1) CHECK (activo IN ('Y','N'))," +
              "promedio NUMBER," +
              "FOREIGN KEY (persona_id) REFERENCES personas(id)," +
              "FOREIGN KEY (programa_id) REFERENCES programas(id)" +
              ")");

      // Tabla Curso
      stmt.execute(
          "CREATE TABLE cursos (" +
              "id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY," +
              "nombre VARCHAR2(255)," +
              "programa_id NUMBER," +
              "activo CHAR(1) CHECK (activo IN ('Y','N'))," +
              "FOREIGN KEY (programa_id) REFERENCES programas(id)" +
              ")");

      // Tabla CursoProfesor
      stmt.execute(
          "CREATE TABLE curso_profesor (" +
              "curso_id NUMBER," +
              "profesor_id NUMBER," +
              "anio NUMBER," + // en Oracle no se recomienda usar 'a√±o' con tilde
              "semestre NUMBER," +
              "PRIMARY KEY (profesor_id, curso_id, anio, semestre)," +
              "FOREIGN KEY (profesor_id) REFERENCES profesores(id)," +
              "FOREIGN KEY (curso_id) REFERENCES cursos(id)" +
              ")");

      // Tabla Inscripcion
      stmt.execute(
          "CREATE TABLE inscripciones (" +
              "id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY," +
              "curso_id NUMBER," +
              "estudiante_id NUMBER," +
              "anio NUMBER," +
              "semestre NUMBER," +
              "CONSTRAINT uq_inscripcion UNIQUE (curso_id, estudiante_id, anio, semestre)," +
              "FOREIGN KEY (curso_id) REFERENCES cursos(id)," +
              "FOREIGN KEY (estudiante_id) REFERENCES estudiantes(id)" +
              ")");

      System.out.println("Todas las tablas han sido creadas correctamente en Oracle.");
    } catch (Exception e) {
      e.printStackTrace();
    }
  }
}
